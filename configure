#!/bin/bash
set -e
help () {
    cat<<EOF

Usage: configure [install|uninstall|upgrade|help]

Commands:

    install    installs from the git repo
    uninstall  restores original system vim config
    upgrade    clobbers existing setup and installs fresh from git
    help       print this msg

EOF
}

# copy in pathogen and then clone in bundles
install () {
#    backup
#
#    # copy in vimrc and pathogen
 #   cp ./vimrc ~/.vimrc
  #  cp ./gvimrc ~/.gvimrc
   # cp -r ./vim ~/.vim

    # add in bundles from bundle.txt
#    mkdir -p ~/.vim/bundle
 #   bundles=$(cat ./bundles.txt)
  #  cd ~/.vim/bundle
   # for repo in $bundles; do
    #    git clone $repo
    #done
}

# if backup exists clobbers home vim and copies in backup
uninstall () {
#    if [ -e ./backup ]
 #   then
  #      rm ~/.vimrc
#        rm ~/.gvimrc
 #       rm -rf ~/.vim
  #      mv ./backup/.vimrc ~/.vimrc
   #     mv ./backup/.gvimrc ~/.gvimrc
    #    mv ./backup/.vim ~/.vim
     #   rm -rf ./backup
    #fi
}

# kills everything, pulls latest from git, installs it
upgrade () {
#    uninstall
#    git pull
#    install
}

# bash test for a valid arg and execute it if so; otherwise show the help
if [ "$1" != "" ]; then
    wl=(install uninstall upgrade help)
    for i in "${wl[@]}"
    do
        if [ "$i" == "$1" ]
        then
            $1
            exit 0
        fi
    done
fi

# show a flailer some help
help
exit 0
